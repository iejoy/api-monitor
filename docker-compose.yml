version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: business-monitor-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: business_monitor
      MYSQL_USER: monitor
      MYSQL_PASSWORD: monitor123
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init_mysql.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - monitor-network

  # 后端API服务
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: business-monitor-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql+pymysql://monitor:monitor123@mysql:3306/business_monitor
      - DEBUG=false
    depends_on:
      - mysql
    volumes:
      - ./backend/.env:/app/.env
    networks:
      - monitor-network

  # 前端Web服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: business-monitor-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - monitor-network

  # Redis缓存（可选）
  redis:
    image: redis:7-alpine
    container_name: business-monitor-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - monitor-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  monitor-network:
    driver: bridge